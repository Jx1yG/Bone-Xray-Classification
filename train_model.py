# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vy6dfq4mIkMUZPO7CG-kHtMtIGhPf7P-
"""

from data_processing import load_dataset
from model_architecture import build_model
import tensorflow as tf

# Load the dataset
x_train, y_train_abnormality, y_train_body_part, x_val, y_val_abnormality, y_val_body_part = load_dataset()

# Build the model
model = build_model()

# Compile the model
model.compile(optimizer=tf.keras.optimizers.SGD(learning_rate=0.001),
              loss={'abnormality': tf.keras.losses.BinaryCrossentropy(), 'body_part': tf.keras.losses.CategoricalCrossentropy()},
              metrics={'abnormality': [tf.keras.metrics.BinaryAccuracy(), tf.keras.metrics.Precision(), tf.keras.metrics.Recall()],
                       'body_part': tf.keras.metrics.CategoricalAccuracy()})

# Train the model
history = model.fit(
    x_train,
    {'abnormality': y_train_abnormality, 'body_part': y_train_body_part},
    epochs=10,
    batch_size=32,
    validation_data=(x_val, {'abnormality': y_val_abnormality, 'body_part': y_val_body_part})
)

# Save the trained model
model.save('models/bone_xray_model.h5')

# Optionally, save training history or results to results/